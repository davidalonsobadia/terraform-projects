name: "Terraform Destroy Pipeline"

on: [workflow_dispatch]

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  TF_VAR_rds_username: ${{ secrets.RDS_USERNAME}}
  TF_VAR_rds_password: ${{ secrets.RDS_PASSWORD}}
  TF_VAR_rds_db_name: ${{ vars.RDS_DB_NAME}}
  TF_VAR_rds_port: ${{ vars.RDS_DB_PORT}}

jobs:
  terraform:
    name: "Terraform Infrastructure Destroy Infraestructure"
    runs-on: ubuntu-latest
    permissions: write-all
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      
      - name: Terraform init
        id: init
        run: terraform init

      - name: Remove from state resources to not destroy
        id: rmstate
        run: |
          terraform state rm aws_ecr_repository.container_test
          terraform state rm aws_s3_bucket.my_bucket

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
      
      - name: Import to state resources not destroyed
        id: import
        run: |
          terraform import aws_ecr_repository.container_test container-test
          terraform import aws_s3_bucket.my_bucket test-bucket-name-remove